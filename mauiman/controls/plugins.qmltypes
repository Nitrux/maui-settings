import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump-qt5 org.kde.kquickimageeditor 1.0'

Module {
    dependencies: [
        "QtGraphicalEffects 1.12",
        "QtQml 2.7",
        "QtQml.Models 2.2",
        "QtQml.WorkerScript 2.15",
        "QtQuick 2.9",
        "QtQuick.Controls 2.5",
        "QtQuick.Controls.Material 2.15",
        "QtQuick.Controls.Styles 1.4",
        "QtQuick.Controls.Styles.Plasma 2.0",
        "QtQuick.Layouts 1.4",
        "QtQuick.Templates 2.4",
        "QtQuick.Window 2.6",
        "org.kde.kconfig 1.0",
        "org.kde.kirigami 2.9",
        "org.kde.kquickcontrolsaddons 2.0",
        "org.kde.plasma.components 3.0",
        "org.kde.plasma.core 2.0",
        "org.kde.plasma.extras 2.0"
    ]
    Component {
        name: "ImageDocument"
        prototype: "QObject"
        exports: ["ImageDocument 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "path"; type: "string" }
        Property { name: "image"; type: "QImage"; isReadonly: true }
        Property { name: "edited"; type: "bool" }
        Signal {
            name: "pathChanged"
            Parameter { name: "url"; type: "string" }
        }
        Method {
            name: "rotate"
            Parameter { name: "angle"; type: "int" }
        }
        Method {
            name: "mirror"
            Parameter { name: "horizontal"; type: "bool" }
            Parameter { name: "vertical"; type: "bool" }
        }
        Method {
            name: "crop"
            Parameter { name: "x"; type: "int" }
            Parameter { name: "y"; type: "int" }
            Parameter { name: "width"; type: "int" }
            Parameter { name: "height"; type: "int" }
        }
        Method { name: "undo" }
        Method { name: "cancel" }
        Method { name: "save"; type: "bool" }
        Method {
            name: "saveAs"
            type: "bool"
            Parameter { name: "location"; type: "QUrl" }
        }
    }
    Component {
        name: "ImageItem"
        defaultProperty: "data"
        prototype: "QQuickPaintedItem"
        exports: ["ImageItem 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "FillMode"
            values: {
                "Stretch": 0,
                "PreserveAspectFit": 1,
                "PreserveAspectCrop": 2,
                "Tile": 3,
                "TileVertically": 4,
                "TileHorizontally": 5
            }
        }
        Property { name: "image"; type: "QImage" }
        Property { name: "smooth"; type: "bool" }
        Property { name: "nativeWidth"; type: "int"; isReadonly: true }
        Property { name: "nativeHeight"; type: "int"; isReadonly: true }
        Property { name: "paintedWidth"; type: "int"; isReadonly: true }
        Property { name: "paintedHeight"; type: "int"; isReadonly: true }
        Property { name: "verticalPadding"; type: "int"; isReadonly: true }
        Property { name: "fillMode"; type: "FillMode" }
        Property { name: "null"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "ResizeHandle"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["ResizeHandle 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Corner"
            values: {
                "Left": 0,
                "TopLeft": 1,
                "Top": 2,
                "TopRight": 3,
                "Right": 4,
                "BottomRight": 5,
                "Bottom": 6,
                "BottomLeft": 7
            }
        }
        Property { name: "resizeBlocked"; type: "bool"; isReadonly: true }
        Property { name: "rectangle"; type: "QQuickItem"; isPointer: true }
        Signal { name: "resizeCornerChanged" }
    }
    Component {
        name: "ResizeRectangle"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["ResizeRectangle 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "insideX"; type: "double" }
        Property { name: "insideY"; type: "double" }
        Property { name: "insideWidth"; type: "double" }
        Property { name: "insideHeight"; type: "double" }
        Signal { name: "acceptSize" }
        Signal { name: "handleComponentChanged" }
    }
}
